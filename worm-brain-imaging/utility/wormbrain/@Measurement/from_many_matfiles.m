function obj = from_many_matfiles(options, varargin)
% obj = Measurement.FROM_MANY_MATFILES(options)
%
%   Returns a Measurement object by loading the data from raw
%   matfiles generated by the microscope. 'options' is a struct
%   that contains the following fields:
%
%     id: unique identifier for this animal (10 hex digits)
%     animal: [optional] animal's name
%     strain: animal's genotype
%     image_files: array of filenames containing microscope
%       data
%     channels: list of channel names for the images along with
%       color vectors (unit vectors in positive RGB octant).
%     temperature_file: [optional] file containing temperature
%       data generated by the labview program
%     calibration: [optional] file containing calibration
%       information for the image
%
% obj = Measurement.FROM_RAW_MATFILES(filename)
%
%   Assumes that filename has a yaml or json encoded structure
%   with the above fields.
%
% obj = Measurement.FROM_RAW_MATFILES(filename, animal)
%
%   Assumes that filename is a file named meta.yaml with a
%   structure whose top-level field is named 'datasets'. That
%   field should contain an array of structures with the above
%   schema. This selects the element whose animal or uuid field
%   matches the specified string.

if ~isstruct(options)
    filename = options;
    options = structtools.load_yaml(filename);
end

% Deal with an array by finding the element struct with the
% desired name or id
if isfield(options, 'datasets')
    animal = varargin{1};
    option_array = options.datasets;
    for i = 1:length(option_array)
        if strcmp(option_array{i}.animal, animal) ...
           || strcmp(option_array{i}.id, animal)
            options = option_array{i};
            break
        end
    end
end

obj.UUID = options.id;

if isfield(options, 'animal')
    obj.Name = options.animal;
else
    obj.Name = obj.UUID;
end

if isfield(options, 'strain')
    obj.Strain = options.strain;
else
    obj.Strain = NaN;
end

% Any data channel occuring in the raw matfile that isn't under
% the 'images' field will be loaded here.
obj.DataChannels = {};

if isfield(options, 'temperature_file')

    filename = structtools.get_fullfile(...
        options, ...
        'temperature_file', ...
        'append_root', true);

    obj.DataChannels{end+1} = ...
        wormbrain.utility.load_temperature_file(filename);

end

